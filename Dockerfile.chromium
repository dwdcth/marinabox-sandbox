FROM alpine:3.19

# Install required packages
RUN apk add --no-cache \
    font-noto-cjk \
    xvfb \
    x11vnc \
    supervisor \
    chromium \
    websockify \
    bash \
    curl \
    socat \
    ffmpeg \
    python3 \
    py3-pip \
    aws-cli \
    python3-dev \
    py3-virtualenv \
    xdotool \
    dbus \
    mesa-dri-gallium \
    vulkan-loader \
    mesa \
    mesa-gl \
    mesa-egl \
    mesa-gles
RUN fc-cache -f -v

# Create necessary directories and files
RUN mkdir -p /tmp/chrome-data && \
    chmod 777 /tmp/chrome-data && \
    mkdir -p /var/run/dbus && \
    mkdir -p /var/log

# Initialize dbus
RUN dbus-uuidgen > /var/lib/dbus/machine-id

# Create and activate virtual environment
ENV VIRTUAL_ENV=/opt/venv
RUN python3 -m venv $VIRTUAL_ENV
ENV PATH="$VIRTUAL_ENV/bin:$PATH"

# Install Python packages in virtual environment
RUN pip3 install --no-cache-dir \
    fastapi \
    uvicorn \
    python-multipart

# Create supervisor config directory
RUN mkdir -p /etc/supervisor.d

COPY noVNC /usr/share/novnc
# Copy the noVNC files to the correct location
RUN cp -r /usr/share/novnc/vnc.html /usr/share/novnc/index.html

# Copy supervisor config
COPY chromium-supervisord.conf /etc/supervisor.d/supervisord.ini

# Copy start script and make it executable
COPY start.sh /start.sh
RUN chmod +x /start.sh

# Add computer_use_server directory
COPY computer_use_server /computer_use_server

# Expose both VNC, noVNC, API and Chrome debug ports
EXPOSE 5900 6081 9222 8000

CMD ["/start.sh"]
